<!DOCTYPE html>
<!-- Survey form with UI/UX in ReactJS -->
<!-- DELLOMES, MARVI DIANE -->
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Telecom Satisfaction Survey</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/16.14.0/umd/react.development.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.14.0/umd/react-dom.development.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.26.0/babel.min.js"></script>
</head>
<body>
    <div id="root"></div>
    <script type="text/babel">
        function SurveyProgram() {
            const [scores, setScores] = React.useState([]);
            const [showModal, setShowModal] = React.useState(false);

            const handleScoreClick = (score) => {
                if (score === 5) {
                    setShowModal(true);
                }
                setScores((prevScores) => [...prevScores, score]);
            };

            const handleCloseModal = () => {
                setShowModal(false);
            };

            return (
                <div className="survey-container">
                    <div className="header">
                        <h1>Telecom Satisfaction Survey</h1>
                        <p>How satisfied are you with our services?</p>
                    </div>

                    <div className="rating-section">
                        <div className="scale-labels">
                            <span>Not Satisfied</span>
                            <span>Very Satisfied</span>
                        </div>
                        <div className="score-buttons">
                            {[1, 2, 3, 4, 5].map((score) => (
                                <button 
                                    key={score}
                                    className="score-btn"
                                    onClick={() => handleScoreClick(score)}
                                >
                                    {score}
                                </button>
                            ))}
                        </div>
                    </div>

                    <div className="results-section">
                        <h2>Your Ratings:</h2>
                        {scores.length === 0 ? (
                            <p className="empty-state">No ratings yet. Please select a score above.</p>
                        ) : (
                            <div className="ratings-display">
                                {scores.map((score, index) => (
                                    <div 
                                        key={index} 
                                        className={`rating-bubble rating-${score}`}
                                    >
                                        {score}
                                    </div>
                                ))}
                            </div>
                        )}
                    </div>

                    {showModal && (
                        <div className="modal">
                            <div className="modal-content">
                                <div className="modal-icon">ðŸŒŸ</div>
                                <h3>Thank You for Your Perfect Rating!</h3>
                                <p>We're thrilled you're happy with our services!</p>
                                <button className="close-btn" onClick={handleCloseModal}>
                                    Close
                                </button>
                            </div>
                        </div>
                    )}
                </div>
            );
        }

        ReactDOM.render(
            <React.StrictMode>
                <SurveyProgram />
            </React.StrictMode>,
            document.getElementById('root')
        );
    </script>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            min-height: 100vh;
            color: #fff;
        }

        .survey-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 2rem;
            text-align: center;
        }

        .header {
            margin-bottom: 2rem;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
            color: #fff;
            text-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }

        .header p {
            font-size: 1.2rem;
            opacity: 0.9;
        }

        .rating-section {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 2rem;
            border-radius: 15px;
            margin-bottom: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
        }

        .scale-labels {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
            font-size: 0.9rem;
            opacity: 0.8;
        }

        .score-buttons {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 1rem;
        }

        .score-btn {
            width: 50px;
            height: 50px;
            font-size: 1.2rem;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .score-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .results-section {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 2rem;
            border-radius: 15px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
        }

        .results-section h2 {
            margin-top: 0;
            margin-bottom: 1.5rem;
        }

        .empty-state {
            opacity: 0.7;
            font-style: italic;
        }

        .ratings-display {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: center;
        }

        .rating-bubble {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            background: rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
        }

        .rating-1 { background: #ff4757; }
        .rating-2 { background: #ff6b81; }
        .rating-3 { background: #ffa502; }
        .rating-4 { background: #2ed573; }
        .rating-5 { background: #1dd1a1; }

        .modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .modal-content {
            background: linear-gradient(135deg, #8e2de2 0%, #4a00e0 100%);
            padding: 2rem;
            border-radius: 15px;
            text-align: center;
            max-width: 400px;
            width: 90%;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .modal-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
        }

        .modal h3 {
            margin-top: 0;
            color: white;
        }

        .modal p {
            margin-bottom: 1.5rem;
            opacity: 0.9;
        }

        .close-btn {
            padding: 0.8rem 1.5rem;
            font-size: 1rem;
            background: rgba(255, 255, 255, 0.2);
            color: #fff;
            border: none;
            border-radius: 50px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .close-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
        }
    </style>
</body>
</html>
